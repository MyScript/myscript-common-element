{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`myscript-common-element` is a web component wrapper around MyScriptJS editor.\n\n    <myscript-common-element\n        type=\"SHAPE\"\n        applicationkey=\"YOUR MYSCRIPT CDK APPLICATION KEY\"\n        hmackey=\"YOUR MYSCRIPT CDK HMAC KEY\">\n    </myscript-common-element>\n\n### Styling\n\n`<myscript-common-element>` provides the following custom properties for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--myscript-common-element-background` | Background of the editor | none\n`--myscript-common-element-color` | Color of the editor | #FFFFFF\n`--myscript-common-element-line-pattern` | Line pattern to apply on the editor | Classic notebook pattern\n`--myscript-common-element-loader-background` | Background of the loader | #1A9FFF\n`--myscript-common-element-loader-color` | Color of the loader | #F5F6F7\n`--myscript-common-element-button-background` | Buttons background | #1A9FFF\n`--myscript-common-element-button-focus-background` | Buttons focus background | #1A9FFF\n`--myscript-common-element-button-disabled-background` | Buttons disabled background | #F5F6F7",
      "summary": "",
      "path": "myscript-common-element.html",
      "properties": [
        {
          "name": "type",
          "type": "string",
          "description": "The current recognition type (e.g. TEXT, SHAPE, MATH, MUSIC or ANALYZER)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 20
            },
            "end": {
              "line": 269,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"TEXT\""
        },
        {
          "name": "protocol",
          "type": "string",
          "description": "The current recognition protocol (WEBSOCKET or REST). We strongly recommend using WebSocket.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 20
            },
            "end": {
              "line": 277,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"WEBSOCKET\""
        },
        {
          "name": "scheme",
          "type": "string",
          "description": "Scheme to use to connect to MyScript Cloud or Server. (https or http)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 20
            },
            "end": {
              "line": 285,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"https\""
        },
        {
          "name": "host",
          "type": "string",
          "description": "The current recognition service host.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 20
            },
            "end": {
              "line": 293,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"cloud.myscript.com\""
        },
        {
          "name": "apiversion",
          "type": "string",
          "description": "Cloud API version to use (eg V3 or V4)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 20
            },
            "end": {
              "line": 301,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"V3\""
        },
        {
          "name": "triggerdelay",
          "type": "number",
          "description": "Delay without any user input before asking for recognition, only use with REST protocol if not on-demand.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 20
            },
            "end": {
              "line": 309,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "2000"
        },
        {
          "name": "processdelay",
          "type": "number",
          "description": "Delay without any recognition exports received before processing the last one received, only use with WEBSOCKET protocol if not on-demand.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 20
            },
            "end": {
              "line": 317,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "1000"
        },
        {
          "name": "ondemand",
          "type": "boolean",
          "description": "True if export should be done on-demand, false otherwise",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 321,
              "column": 20
            },
            "end": {
              "line": 325,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "applicationkey",
          "type": "string",
          "description": "Application key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own MyScript Developer account at http://dev.myscript.com and then generate your application key at http://cloud.myscript.com. See the Developer Guide to learn how to register.<br /><br />\n<b>Warning</b>: This parameter is <b>mandatory</b> and its value should be a string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 20
            },
            "end": {
              "line": 334,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "hmackey",
          "type": "string",
          "description": "HMAC key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own HMAC key corresponding to your own application key in your account at http://cloud.myscript.com.<br /><br />\n<b>Warning</b>: This parameter may be <b>mandatory</b> if HMAC signature security is enabled for your application. The value should be a string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 20
            },
            "end": {
              "line": 343,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "unloaded",
          "type": "boolean",
          "description": "Properties to set when you wish to set attributes in javascript. unloaded attributes should be removed once all properties are set.\n(see demo/programmatic_init.html for a better understanding)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 20
            },
            "end": {
              "line": 354,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_unloadedChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "editor",
          "type": "Object",
          "description": "The underlying editor created with MyScriptJS. This could allow to access more advanced properties. Mostly used for automatic testing currently.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 20
            },
            "end": {
              "line": 361,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "configuration",
          "type": "Object",
          "description": "Set the additional configuration used to feed MyScript ink Paper (Structure of object as defined in MyScriptJS DefaultConfiguration.js file)\nConfiguration values are taken into account when myscript-common-element is attach to the dom and when unloaded is set to false.\nConfiguration values are not reflected to myscript-common-element attributes plus attributes values are always taken into account before configuration values (see demo/programmatic_init.html for a better understanding).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 20
            },
            "end": {
              "line": 370,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "pencolor",
          "type": "string",
          "description": "Color (supported formats rgb() rgba() hsl() hsla() #rgb #rgba #rrggbb #rrggbbaa)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 20
            },
            "end": {
              "line": 378,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"#1580CD\""
        },
        {
          "name": "penwidth",
          "type": "number",
          "description": "Width of strokes and primitives in mm (no other unit is supported yet)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 20
            },
            "end": {
              "line": 386,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "1"
        },
        {
          "name": "fontfamily",
          "type": "string",
          "description": "font-family used to render text conversion",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 390,
              "column": 20
            },
            "end": {
              "line": 394,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"Open Sans\""
        },
        {
          "name": "fontsize",
          "type": "number",
          "description": "font-size used to render text conversion",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 398,
              "column": 20
            },
            "end": {
              "line": 402,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "10"
        },
        {
          "name": "canundo",
          "type": "boolean",
          "description": "True if undo is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 20
            },
            "end": {
              "line": 411,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canredo",
          "type": "boolean",
          "description": "True if redo is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 20
            },
            "end": {
              "line": 420,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canclear",
          "type": "boolean",
          "description": "True if there is something to clear",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 424,
              "column": 20
            },
            "end": {
              "line": 429,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canexport",
          "type": "boolean",
          "description": "True if export button could be displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 433,
              "column": 20
            },
            "end": {
              "line": 438,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canconvert",
          "type": "boolean",
          "description": "True if convert button could be displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 20
            },
            "end": {
              "line": 447,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disablecontrols",
          "type": "boolean",
          "description": "If set to true, remove the controls (undo/redo, clear...).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 20
            },
            "end": {
              "line": 456,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableundoredocontrol",
          "type": "boolean",
          "description": "If set to true, remove the undo/redo controls.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 20
            },
            "end": {
              "line": 464,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "disableclearcontrol",
          "type": "boolean",
          "description": "If set to true, remove the clear control.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 20
            },
            "end": {
              "line": 472,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "disableexportcontrol",
          "type": "boolean",
          "description": "If set to true, remove the export control.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 476,
              "column": 20
            },
            "end": {
              "line": 480,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "disableconvertcontrol",
          "type": "boolean",
          "description": "If set to true, remove the convert control.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 484,
              "column": 20
            },
            "end": {
              "line": 488,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "exports",
          "type": "Object.<String, Object>",
          "description": "Exports.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 493,
              "column": 20
            },
            "end": {
              "line": 496,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "debug",
          "type": "boolean",
          "description": "True to display console output, false otherwise.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 500,
              "column": 20
            },
            "end": {
              "line": 504,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_buildConfiguration",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 577,
              "column": 12
            },
            "end": {
              "line": 590,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resizeListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 592,
              "column": 12
            },
            "end": {
              "line": 597,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_loadListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 599,
              "column": 12
            },
            "end": {
              "line": 605,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_changeListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 607,
              "column": 12
            },
            "end": {
              "line": 619,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_exportedListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 621,
              "column": 12
            },
            "end": {
              "line": 627,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_convertedListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 629,
              "column": 12
            },
            "end": {
              "line": 634,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_undoListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 636,
              "column": 12
            },
            "end": {
              "line": 641,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_redoListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 643,
              "column": 12
            },
            "end": {
              "line": 648,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_clearListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 650,
              "column": 12
            },
            "end": {
              "line": 656,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_exportListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 658,
              "column": 12
            },
            "end": {
              "line": 663,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_convertListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 665,
              "column": 12
            },
            "end": {
              "line": 670,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_idleListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 672,
              "column": 12
            },
            "end": {
              "line": 677,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_errorListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 679,
              "column": 12
            },
            "end": {
              "line": 689,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 704,
              "column": 12
            },
            "end": {
              "line": 711,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 713,
              "column": 12
            },
            "end": {
              "line": 717,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "clear",
          "description": "Clear all context",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 722,
              "column": 12
            },
            "end": {
              "line": 726,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "undo",
          "description": "Undo action",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 731,
              "column": 12
            },
            "end": {
              "line": 735,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "redo",
          "description": "Redo action",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 740,
              "column": 12
            },
            "end": {
              "line": 744,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "exportContent",
          "description": "Trigger export",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 749,
              "column": 12
            },
            "end": {
              "line": 753,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "convert",
          "description": "Trigger convert",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 758,
              "column": 12
            },
            "end": {
              "line": 762,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "getStats",
          "description": "Return the stats allowing to monitor what ink size is send to the server.\nStats objects format {strokesCount : 0, pointsCount : 0, byteSize : 0, humanSize : 0, humanUnit : 'BYTE'} humanUnit could have the values BYTE, BYTES, KiB, MiB",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 768,
              "column": 12
            },
            "end": {
              "line": 772,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_updateTheme",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 774,
              "column": 12
            },
            "end": {
              "line": 779,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "editor"
            },
            {
              "name": "fontfamily"
            },
            {
              "name": "fontsize"
            }
          ]
        },
        {
          "name": "_updatePenStyle",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 781,
              "column": 12
            },
            "end": {
              "line": 786,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "editor"
            },
            {
              "name": "pencolor"
            },
            {
              "name": "penwidth"
            }
          ]
        },
        {
          "name": "_unloadedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 788,
              "column": 12
            },
            "end": {
              "line": 803,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "unloaded"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "examples/v4/index.html",
          "description": "Get started (iink SDK web)"
        },
        {
          "url": "examples/v4/exporting_on_demand.html",
          "description": "Handling exports (iink SDK web)"
        },
        {
          "url": "examples/v4/customizing_style.html",
          "description": "Customizing style (iink SDK web)"
        },
        {
          "url": "examples/v3/index.html",
          "description": "Get started (CDK v3.2)"
        },
        {
          "url": "examples/v3/handling_exports.html",
          "description": "Handling exports (CDK 3.2)"
        },
        {
          "url": "examples/v3/customizing_style.html",
          "description": "Customizing style (CDK 3.2)"
        },
        {
          "url": "examples/programmatic_init.html",
          "description": "Configuring component with Javascript"
        },
        {
          "url": "examples/handling_errors.html",
          "description": "Demonstration of error handling"
        },
        {
          "url": "examples/get_stats.html",
          "description": "Accessing the editor stats"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 204,
          "column": 8
        },
        "end": {
          "line": 804,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MyScriptCommonElement",
      "attributes": [
        {
          "name": "type",
          "description": "The current recognition type (e.g. TEXT, SHAPE, MATH, MUSIC or ANALYZER)",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 20
            },
            "end": {
              "line": 269,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "protocol",
          "description": "The current recognition protocol (WEBSOCKET or REST). We strongly recommend using WebSocket.",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 20
            },
            "end": {
              "line": 277,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "scheme",
          "description": "Scheme to use to connect to MyScript Cloud or Server. (https or http)",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 20
            },
            "end": {
              "line": 285,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "host",
          "description": "The current recognition service host.",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 20
            },
            "end": {
              "line": 293,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "apiversion",
          "description": "Cloud API version to use (eg V3 or V4)",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 20
            },
            "end": {
              "line": 301,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "triggerdelay",
          "description": "Delay without any user input before asking for recognition, only use with REST protocol if not on-demand.",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 20
            },
            "end": {
              "line": 309,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "processdelay",
          "description": "Delay without any recognition exports received before processing the last one received, only use with WEBSOCKET protocol if not on-demand.",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 20
            },
            "end": {
              "line": 317,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "ondemand",
          "description": "True if export should be done on-demand, false otherwise",
          "sourceRange": {
            "start": {
              "line": 321,
              "column": 20
            },
            "end": {
              "line": 325,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "applicationkey",
          "description": "Application key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own MyScript Developer account at http://dev.myscript.com and then generate your application key at http://cloud.myscript.com. See the Developer Guide to learn how to register.<br /><br />\n<b>Warning</b>: This parameter is <b>mandatory</b> and its value should be a string.",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 20
            },
            "end": {
              "line": 334,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "hmackey",
          "description": "HMAC key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own HMAC key corresponding to your own application key in your account at http://cloud.myscript.com.<br /><br />\n<b>Warning</b>: This parameter may be <b>mandatory</b> if HMAC signature security is enabled for your application. The value should be a string.",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 20
            },
            "end": {
              "line": 343,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "unloaded",
          "description": "Properties to set when you wish to set attributes in javascript. unloaded attributes should be removed once all properties are set.\n(see demo/programmatic_init.html for a better understanding)",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 20
            },
            "end": {
              "line": 354,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "editor",
          "description": "The underlying editor created with MyScriptJS. This could allow to access more advanced properties. Mostly used for automatic testing currently.",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 20
            },
            "end": {
              "line": 361,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "configuration",
          "description": "Set the additional configuration used to feed MyScript ink Paper (Structure of object as defined in MyScriptJS DefaultConfiguration.js file)\nConfiguration values are taken into account when myscript-common-element is attach to the dom and when unloaded is set to false.\nConfiguration values are not reflected to myscript-common-element attributes plus attributes values are always taken into account before configuration values (see demo/programmatic_init.html for a better understanding).",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 20
            },
            "end": {
              "line": 370,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "pencolor",
          "description": "Color (supported formats rgb() rgba() hsl() hsla() #rgb #rgba #rrggbb #rrggbbaa)",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 20
            },
            "end": {
              "line": 378,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "penwidth",
          "description": "Width of strokes and primitives in mm (no other unit is supported yet)",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 20
            },
            "end": {
              "line": 386,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "fontfamily",
          "description": "font-family used to render text conversion",
          "sourceRange": {
            "start": {
              "line": 390,
              "column": 20
            },
            "end": {
              "line": 394,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "fontsize",
          "description": "font-size used to render text conversion",
          "sourceRange": {
            "start": {
              "line": 398,
              "column": 20
            },
            "end": {
              "line": 402,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "canundo",
          "description": "True if undo is available",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 20
            },
            "end": {
              "line": 411,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "canredo",
          "description": "True if redo is available",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 20
            },
            "end": {
              "line": 420,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "canclear",
          "description": "True if there is something to clear",
          "sourceRange": {
            "start": {
              "line": 424,
              "column": 20
            },
            "end": {
              "line": 429,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "canexport",
          "description": "True if export button could be displayed.",
          "sourceRange": {
            "start": {
              "line": 433,
              "column": 20
            },
            "end": {
              "line": 438,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "canconvert",
          "description": "True if convert button could be displayed.",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 20
            },
            "end": {
              "line": 447,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disablecontrols",
          "description": "If set to true, remove the controls (undo/redo, clear...).",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 20
            },
            "end": {
              "line": 456,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disableundoredocontrol",
          "description": "If set to true, remove the undo/redo controls.",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 20
            },
            "end": {
              "line": 464,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disableclearcontrol",
          "description": "If set to true, remove the clear control.",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 20
            },
            "end": {
              "line": 472,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disableexportcontrol",
          "description": "If set to true, remove the export control.",
          "sourceRange": {
            "start": {
              "line": 476,
              "column": 20
            },
            "end": {
              "line": 480,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disableconvertcontrol",
          "description": "If set to true, remove the convert control.",
          "sourceRange": {
            "start": {
              "line": 484,
              "column": 20
            },
            "end": {
              "line": 488,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "exports",
          "description": "Exports.",
          "sourceRange": {
            "start": {
              "line": 493,
              "column": 20
            },
            "end": {
              "line": 496,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object.<String, Object>"
        },
        {
          "name": "debug",
          "description": "True to display console output, false otherwise.",
          "sourceRange": {
            "start": {
              "line": 500,
              "column": 20
            },
            "end": {
              "line": 504,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "change",
          "description": "change",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "clear",
          "description": "clear",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "convert",
          "description": "convert",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "converted",
          "description": "converted",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "error",
          "description": "error",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "export",
          "description": "export",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "exported",
          "description": "exported",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "load",
          "description": "load",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "redo",
          "description": "redo",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "undo",
          "description": "undo",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "unloaded-changed",
          "description": "Fired when the `unloaded` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "editor-changed",
          "description": "Fired when the `editor` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "configuration-changed",
          "description": "Fired when the `configuration` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "canundo-changed",
          "description": "Fired when the `canundo` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "canredo-changed",
          "description": "Fired when the `canredo` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "canclear-changed",
          "description": "Fired when the `canclear` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "canexport-changed",
          "description": "Fired when the `canexport` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "canconvert-changed",
          "description": "Fired when the `canconvert` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "disablecontrols-changed",
          "description": "Fired when the `disablecontrols` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "exports-changed",
          "description": "Fired when the `exports` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "myscript-common-element"
    },
    {
      "description": "`myscript-languages-element` is a web component to retrieve CDK available languages.\n\n    <myscript-languages-element\n        applicationkey=\"YOUR MYSCRIPT CDK APPLICATION KEY\"\n        hmackey=\"YOUR MYSCRIPT CDK HMAC KEY\">\n    </myscript-languages-element>",
      "summary": "",
      "path": "myscript-languages-element.html",
      "properties": [
        {
          "name": "type",
          "type": "string",
          "description": "<b>not mutable</b><br />\nThe current recognition type (e.g. TEXT or ANALYZER)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 20
            },
            "end": {
              "line": 61,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"TEXT\""
        },
        {
          "name": "scheme",
          "type": "string",
          "description": "Scheme to use to connect to MyScript Cloud or Server. (https or http)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 20
            },
            "end": {
              "line": 69,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"https\""
        },
        {
          "name": "host",
          "type": "string",
          "description": "The current recognition service host.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 20
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"cloud.myscript.com\""
        },
        {
          "name": "applicationkey",
          "type": "string",
          "description": "Application key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own MyScript Developer account at http://dev.myscript.com and then generate your application key at http://cloud.myscript.com. See the Developer Guide to learn how to register.<br /><br />\n<b>Warning</b>: This parameter is <b>mandatory</b> and its value should be a string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 20
            },
            "end": {
              "line": 86,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "sortbyvalue",
          "type": "boolean",
          "description": "Language list sorts by values parameter. If false, language list sort by canonical name",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 20
            },
            "end": {
              "line": 94,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "languages",
          "type": "Array",
          "description": "Languages List",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 20
            },
            "end": {
              "line": 102,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "unloaded",
          "type": "boolean",
          "description": "Properties to set when you wish to set attributes in javascript. unloaded attributes should be removed once all properties are set.\n(see demo/get_languages_programmatic.html for a better understanding)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 20
            },
            "end": {
              "line": 113,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_unloadedChanged\""
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "configuration",
          "type": "Object",
          "description": "Set the additional configuration used to feed MyScript ink Paper (Structure of object as defined in MyScriptjs MyScriptJSOptions.js file)\nConfiguration values are taken into account when myscript-common-element is attach to the dom and when unloaded is set to false.\nConfiguration values are not reflected to myscript-languages-element attributes plus attributes values are always taken into account before configuration values (see demo/programmatic_init.html for a better understanding).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 20
            },
            "end": {
              "line": 125,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "debug",
          "type": "boolean",
          "description": "True to display console output, false otherwise.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 20
            },
            "end": {
              "line": 133,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "select",
          "type": "boolean",
          "description": "If set to true, display the language select.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 20
            },
            "end": {
              "line": 142,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_buildConfiguration",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 12
            },
            "end": {
              "line": 201,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 12
            },
            "end": {
              "line": 233,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 12
            },
            "end": {
              "line": 238,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_unloadedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 12
            },
            "end": {
              "line": 245,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "unloaded"
            }
          ]
        },
        {
          "name": "_getConfigurationLanguageCode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 12
            },
            "end": {
              "line": 261,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getLanguages",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 12
            },
            "end": {
              "line": 294,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "examples/myscript-languages-element/get_languages.html",
          "description": "Get languages"
        },
        {
          "url": "examples/myscript-languages-element/get_languages_programmatic.html",
          "description": "Get languages programmatically"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 45,
          "column": 8
        },
        "end": {
          "line": 296,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MyScriptLanguagesElement",
      "attributes": [
        {
          "name": "type",
          "description": "<b>not mutable</b><br />\nThe current recognition type (e.g. TEXT or ANALYZER)",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 20
            },
            "end": {
              "line": 61,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "scheme",
          "description": "Scheme to use to connect to MyScript Cloud or Server. (https or http)",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 20
            },
            "end": {
              "line": 69,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "host",
          "description": "The current recognition service host.",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 20
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "applicationkey",
          "description": "Application key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own MyScript Developer account at http://dev.myscript.com and then generate your application key at http://cloud.myscript.com. See the Developer Guide to learn how to register.<br /><br />\n<b>Warning</b>: This parameter is <b>mandatory</b> and its value should be a string.",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 20
            },
            "end": {
              "line": 86,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "sortbyvalue",
          "description": "Language list sorts by values parameter. If false, language list sort by canonical name",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 20
            },
            "end": {
              "line": 94,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "languages",
          "description": "Languages List",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 20
            },
            "end": {
              "line": 102,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "unloaded",
          "description": "Properties to set when you wish to set attributes in javascript. unloaded attributes should be removed once all properties are set.\n(see demo/get_languages_programmatic.html for a better understanding)",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 20
            },
            "end": {
              "line": 113,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "configuration",
          "description": "Set the additional configuration used to feed MyScript ink Paper (Structure of object as defined in MyScriptjs MyScriptJSOptions.js file)\nConfiguration values are taken into account when myscript-common-element is attach to the dom and when unloaded is set to false.\nConfiguration values are not reflected to myscript-languages-element attributes plus attributes values are always taken into account before configuration values (see demo/programmatic_init.html for a better understanding).",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 20
            },
            "end": {
              "line": 125,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "debug",
          "description": "True to display console output, false otherwise.",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 20
            },
            "end": {
              "line": 133,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "select",
          "description": "If set to true, display the language select.",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 20
            },
            "end": {
              "line": 142,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "languages-changed",
          "description": "Fired when the `languages` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "unloaded-changed",
          "description": "Fired when the `unloaded` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "configuration-changed",
          "description": "Fired when the `configuration` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "select-changed",
          "description": "Fired when the `select` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "myscript-languages-element"
    }
  ]
}

{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`myscript-common-element` is a web component wrapper around MyScriptJS editor.\n\n    <myscript-common-element\n        type=\"SHAPE\"\n        applicationkey=\"YOUR MYSCRIPT CDK APPLICATION KEY\"\n        hmackey=\"YOUR MYSCRIPT CDK HMAC KEY\">\n    </myscript-common-element>",
      "summary": "",
      "path": "myscript-common-element.html",
      "properties": [
        {
          "name": "type",
          "type": "string",
          "description": "<b>not mutable</b><br />\nThe current recognition type (e.g. TEXT, SHAPE, MATH, MUSIC or ANALYZER)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 20
            },
            "end": {
              "line": 238,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"TEXT\""
        },
        {
          "name": "protocol",
          "type": "string",
          "description": "The current recognition protocol (WebSocket or REST). We strongly recommend using WebSocket.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 20
            },
            "end": {
              "line": 246,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"REST\""
        },
        {
          "name": "scheme",
          "type": "string",
          "description": "Scheme to use to connect to MyScript Cloud or Server. (https or http)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 20
            },
            "end": {
              "line": 254,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"https\""
        },
        {
          "name": "host",
          "type": "string",
          "description": "The current recognition service host.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 20
            },
            "end": {
              "line": 262,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"cloud.myscript.com\""
        },
        {
          "name": "apiversion",
          "type": "string",
          "description": "Cloud API version to use (eg V3 or V4)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 20
            },
            "end": {
              "line": 270,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"V3\""
        },
        {
          "name": "recognitiontriggerdelay",
          "type": "number",
          "description": "Delay without any user input before asking for recognition, only use with REST protocol.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 20
            },
            "end": {
              "line": 278,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "2000"
        },
        {
          "name": "recognitionprocessdelay",
          "type": "number",
          "description": "Delay without any recognition exports received before processing the last one received, only use with WEBSOCKET protocol.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 20
            },
            "end": {
              "line": 286,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "1000"
        },
        {
          "name": "applicationkey",
          "type": "string",
          "description": "Application key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own MyScript Developer account at http://dev.myscript.com and then generate your application key at http://cloud.myscript.com. See the Developer Guide to learn how to register.<br /><br />\n<b>Warning</b>: This parameter is <b>mandatory</b> and its value should be a string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 20
            },
            "end": {
              "line": 295,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "hmackey",
          "type": "string",
          "description": "HMAC key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own HMAC key corresponding to your own application key in your account at http://cloud.myscript.com.<br /><br />\n<b>Warning</b>: This parameter may be <b>mandatory</b> if HMAC signature security is enabled for your application. The value should be a string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 20
            },
            "end": {
              "line": 304,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "unloaded",
          "type": "boolean",
          "description": "Properties to set when you wish to set attributes in javascript. unloaded attributes should be removed once all properties are set.\n(see demo/programmatic-init.html for a better understanding)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 20
            },
            "end": {
              "line": 315,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_unloadedChanged\""
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "editor",
          "type": "Object",
          "description": "The underlying editor created with MyScriptJS. This could allow to access more advanced properties. Mostly used for automatic testing currently.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 20
            },
            "end": {
              "line": 321,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "configuration",
          "type": "Object",
          "description": "Set the additional configuration used to feed MyScript ink Paper (Structure of object as defined in MyScriptjs DefaultConfiguration.js file)\nConfiguration values are taken into account when myscript-common-element is attach to the dom and when unloaded is set to false.\nConfiguration values are not reflected to myscript-common-element attributes plus attributes values are always taken into account before configuration values (see demo/programmatic-init.html for a better understanding).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 20
            },
            "end": {
              "line": 330,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "strokecolor",
          "type": "string",
          "description": "Color of the stroke",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 20
            },
            "end": {
              "line": 339,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_strokecolorChanged\""
            }
          },
          "defaultValue": "\"#1580CD\""
        },
        {
          "name": "strokewidth",
          "type": "number",
          "description": "Width of the stroke",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 20
            },
            "end": {
              "line": 348,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_strokewidthChanged\""
            }
          },
          "defaultValue": "4"
        },
        {
          "name": "canundo",
          "type": "boolean",
          "description": "True if undo is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 20
            },
            "end": {
              "line": 357,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canredo",
          "type": "boolean",
          "description": "True if redo is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 361,
              "column": 20
            },
            "end": {
              "line": 366,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canclear",
          "type": "boolean",
          "description": "True if there is something to clear",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 20
            },
            "end": {
              "line": 375,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canexport",
          "type": "boolean",
          "description": "True if export button could be displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 20
            },
            "end": {
              "line": 384,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canconvert",
          "type": "boolean",
          "description": "True if convert button could be displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 388,
              "column": 20
            },
            "end": {
              "line": 393,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hidebuttons",
          "type": "boolean",
          "description": "If set to true, hide the buttons (Trash, Undo, Redo).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 20
            },
            "end": {
              "line": 402,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableundoredo",
          "type": "boolean",
          "description": "True if the undo/redo feature is disabled, false otherwise",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 20
            },
            "end": {
              "line": 410,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "disableclear",
          "type": "boolean",
          "description": "True if the clear feature is disabled, false otherwise",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 414,
              "column": 20
            },
            "end": {
              "line": 418,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "disableexport",
          "type": "boolean",
          "description": "True if the export feature is disabled, false otherwise",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 20
            },
            "end": {
              "line": 426,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "disableconvert",
          "type": "boolean",
          "description": "True if the convert feature is disabled, false otherwise",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 20
            },
            "end": {
              "line": 434,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "exports",
          "type": "Object.<String, Object>",
          "description": "Exports.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 20
            },
            "end": {
              "line": 442,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "debug",
          "type": "boolean",
          "description": "True to display console output, false otherwise.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 446,
              "column": 20
            },
            "end": {
              "line": 450,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_resizeHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 454,
              "column": 12
            },
            "end": {
              "line": 459,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 461,
              "column": 12
            },
            "end": {
              "line": 551,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 553,
              "column": 12
            },
            "end": {
              "line": 562,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "clear",
          "description": "Clear all context",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 567,
              "column": 12
            },
            "end": {
              "line": 571,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "undo",
          "description": "Undo action",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 576,
              "column": 12
            },
            "end": {
              "line": 580,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "redo",
          "description": "Redo action",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 12
            },
            "end": {
              "line": 589,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "askForExport",
          "description": "Trigger export",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 594,
              "column": 12
            },
            "end": {
              "line": 598,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "exports"
            }
          ]
        },
        {
          "name": "convert",
          "description": "Trigger convert",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 603,
              "column": 12
            },
            "end": {
              "line": 607,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "getStats",
          "description": "Return the stats allowing to monitor what ink size is send to the server.\nStats objects format {strokesCount : 0, pointsCount : 0, byteSize : 0, humanSize : 0, humanUnit : 'BYTE'} humanUnit could have the values BYTE, BYTES, KiB, MiB",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 613,
              "column": 12
            },
            "end": {
              "line": 617,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_strokecolorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 619,
              "column": 12
            },
            "end": {
              "line": 626,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "color"
            }
          ]
        },
        {
          "name": "_strokewidthChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 628,
              "column": 12
            },
            "end": {
              "line": 634,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "width"
            }
          ]
        },
        {
          "name": "_unloadedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 636,
              "column": 12
            },
            "end": {
              "line": 646,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "unloaded"
            }
          ]
        },
        {
          "name": "_buildCustomStyle",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 648,
              "column": 12
            },
            "end": {
              "line": 658,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_buildConfiguration",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 660,
              "column": 12
            },
            "end": {
              "line": 686,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/customstyle.html",
          "description": ""
        },
        {
          "url": "demo/debug.html",
          "description": ""
        },
        {
          "url": "demo/iink_preview.html",
          "description": ""
        },
        {
          "url": "demo/init_error.html",
          "description": ""
        },
        {
          "url": "demo/programmatic-init.html",
          "description": ""
        },
        {
          "url": "demo/shadow_dom.html",
          "description": ""
        },
        {
          "url": "demo/stats.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 172,
          "column": 8
        },
        "end": {
          "line": 688,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MyScriptCommonElement",
      "attributes": [
        {
          "name": "type",
          "description": "<b>not mutable</b><br />\nThe current recognition type (e.g. TEXT, SHAPE, MATH, MUSIC or ANALYZER)",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 20
            },
            "end": {
              "line": 238,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "protocol",
          "description": "The current recognition protocol (WebSocket or REST). We strongly recommend using WebSocket.",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 20
            },
            "end": {
              "line": 246,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "scheme",
          "description": "Scheme to use to connect to MyScript Cloud or Server. (https or http)",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 20
            },
            "end": {
              "line": 254,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "host",
          "description": "The current recognition service host.",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 20
            },
            "end": {
              "line": 262,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "apiversion",
          "description": "Cloud API version to use (eg V3 or V4)",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 20
            },
            "end": {
              "line": 270,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "recognitiontriggerdelay",
          "description": "Delay without any user input before asking for recognition, only use with REST protocol.",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 20
            },
            "end": {
              "line": 278,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "recognitionprocessdelay",
          "description": "Delay without any recognition exports received before processing the last one received, only use with WEBSOCKET protocol.",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 20
            },
            "end": {
              "line": 286,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "applicationkey",
          "description": "Application key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own MyScript Developer account at http://dev.myscript.com and then generate your application key at http://cloud.myscript.com. See the Developer Guide to learn how to register.<br /><br />\n<b>Warning</b>: This parameter is <b>mandatory</b> and its value should be a string.",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 20
            },
            "end": {
              "line": 295,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "hmackey",
          "description": "HMAC key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own HMAC key corresponding to your own application key in your account at http://cloud.myscript.com.<br /><br />\n<b>Warning</b>: This parameter may be <b>mandatory</b> if HMAC signature security is enabled for your application. The value should be a string.",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 20
            },
            "end": {
              "line": 304,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "unloaded",
          "description": "Properties to set when you wish to set attributes in javascript. unloaded attributes should be removed once all properties are set.\n(see demo/programmatic-init.html for a better understanding)",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 20
            },
            "end": {
              "line": 315,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "editor",
          "description": "The underlying editor created with MyScriptJS. This could allow to access more advanced properties. Mostly used for automatic testing currently.",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 20
            },
            "end": {
              "line": 321,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "configuration",
          "description": "Set the additional configuration used to feed MyScript ink Paper (Structure of object as defined in MyScriptjs DefaultConfiguration.js file)\nConfiguration values are taken into account when myscript-common-element is attach to the dom and when unloaded is set to false.\nConfiguration values are not reflected to myscript-common-element attributes plus attributes values are always taken into account before configuration values (see demo/programmatic-init.html for a better understanding).",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 20
            },
            "end": {
              "line": 330,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "strokecolor",
          "description": "Color of the stroke",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 20
            },
            "end": {
              "line": 339,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "strokewidth",
          "description": "Width of the stroke",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 20
            },
            "end": {
              "line": 348,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "canundo",
          "description": "True if undo is available",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 20
            },
            "end": {
              "line": 357,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "canredo",
          "description": "True if redo is available",
          "sourceRange": {
            "start": {
              "line": 361,
              "column": 20
            },
            "end": {
              "line": 366,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "canclear",
          "description": "True if there is something to clear",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 20
            },
            "end": {
              "line": 375,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "canexport",
          "description": "True if export button could be displayed.",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 20
            },
            "end": {
              "line": 384,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "canconvert",
          "description": "True if convert button could be displayed.",
          "sourceRange": {
            "start": {
              "line": 388,
              "column": 20
            },
            "end": {
              "line": 393,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hidebuttons",
          "description": "If set to true, hide the buttons (Trash, Undo, Redo).",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 20
            },
            "end": {
              "line": 402,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disableundoredo",
          "description": "True if the undo/redo feature is disabled, false otherwise",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 20
            },
            "end": {
              "line": 410,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disableclear",
          "description": "True if the clear feature is disabled, false otherwise",
          "sourceRange": {
            "start": {
              "line": 414,
              "column": 20
            },
            "end": {
              "line": 418,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disableexport",
          "description": "True if the export feature is disabled, false otherwise",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 20
            },
            "end": {
              "line": 426,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disableconvert",
          "description": "True if the convert feature is disabled, false otherwise",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 20
            },
            "end": {
              "line": 434,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "exports",
          "description": "Exports.",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 20
            },
            "end": {
              "line": 442,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object.<String, Object>"
        },
        {
          "name": "debug",
          "description": "True to display console output, false otherwise.",
          "sourceRange": {
            "start": {
              "line": 446,
              "column": 20
            },
            "end": {
              "line": 450,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "change",
          "description": "change",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "clear",
          "description": "clear",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "convert",
          "description": "convert",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "converted",
          "description": "converted",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "error",
          "description": "error",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "export",
          "description": "export",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "exported",
          "description": "exported",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "load",
          "description": "load",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "redo",
          "description": "redo",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "undo",
          "description": "undo",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "unloaded-changed",
          "description": "Fired when the `unloaded` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "configuration-changed",
          "description": "Fired when the `configuration` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "canundo-changed",
          "description": "Fired when the `canundo` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "canredo-changed",
          "description": "Fired when the `canredo` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "canclear-changed",
          "description": "Fired when the `canclear` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "canexport-changed",
          "description": "Fired when the `canexport` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "canconvert-changed",
          "description": "Fired when the `canconvert` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "hidebuttons-changed",
          "description": "Fired when the `hidebuttons` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "exports-changed",
          "description": "Fired when the `exports` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "myscript-common-element"
    },
    {
      "description": "`myscript-languages-element` is a web component to retrieve CDK available languages.\n\n    <myscript-languages-element\n        applicationkey=\"YOUR MYSCRIPT CDK APPLICATION KEY\"\n        hmackey=\"YOUR MYSCRIPT CDK HMAC KEY\">\n    </myscript-languages-element>",
      "summary": "",
      "path": "myscript-languages-element.html",
      "properties": [
        {
          "name": "type",
          "type": "string",
          "description": "<b>not mutable</b><br />\nThe current recognition type (e.g. TEXT or ANALYZER)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"TEXT\""
        },
        {
          "name": "scheme",
          "type": "string",
          "description": "Scheme to use to connect to MyScript Cloud or Server. (https or http)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 20
            },
            "end": {
              "line": 39,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"https\""
        },
        {
          "name": "host",
          "type": "string",
          "description": "The current recognition service host.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 20
            },
            "end": {
              "line": 47,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"cloud.myscript.com\""
        },
        {
          "name": "applicationkey",
          "type": "string",
          "description": "Application key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own MyScript Developer account at http://dev.myscript.com and then generate your application key at http://cloud.myscript.com. See the Developer Guide to learn how to register.<br /><br />\n<b>Warning</b>: This parameter is <b>mandatory</b> and its value should be a string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 20
            },
            "end": {
              "line": 56,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "sortbyvalue",
          "type": "boolean",
          "description": "Language list sorts by values parameter. If false, language list sort by canonical name",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 20
            },
            "end": {
              "line": 64,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "languages",
          "type": "Object",
          "description": "Languages List",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 20
            },
            "end": {
              "line": 71,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "unloaded",
          "type": "boolean",
          "description": "Properties to set when you wish to set attributes in javascript. unloaded attributes should be removed once all properties are set.\n(see demo/languages-selector-init.html for a better understanding)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 20
            },
            "end": {
              "line": 82,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_unloadedChanged\""
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "configuration",
          "type": "Object",
          "description": "Set the additional configuration used to feed MyScript ink Paper (Structure of object as defined in MyScriptjs MyScriptJSOptions.js file)\nConfiguration values are taken into account when myscript-common-element is attach to the dom and when unloaded is set to false.\nConfiguration values are not reflected to myscript-languages-element attributes plus attributes values are always taken into account before configuration values (see demo/programmatic-init.html for a better understanding).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 20
            },
            "end": {
              "line": 91,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "debug",
          "type": "boolean",
          "description": "True to display console output, false otherwise.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 20
            },
            "end": {
              "line": 99,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 12
            },
            "end": {
              "line": 111,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_unloadedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 12
            },
            "end": {
              "line": 118,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "unloaded"
            }
          ]
        },
        {
          "name": "_buildConfiguration",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 12
            },
            "end": {
              "line": 146,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getLanguages",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 12
            },
            "end": {
              "line": 164,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "languageElement"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/languages.html",
          "description": ""
        },
        {
          "url": "demo/languages-selector-init.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 8
        },
        "end": {
          "line": 166,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MyScriptLanguagesElement",
      "attributes": [
        {
          "name": "type",
          "description": "<b>not mutable</b><br />\nThe current recognition type (e.g. TEXT or ANALYZER)",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "scheme",
          "description": "Scheme to use to connect to MyScript Cloud or Server. (https or http)",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 20
            },
            "end": {
              "line": 39,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "host",
          "description": "The current recognition service host.",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 20
            },
            "end": {
              "line": 47,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "applicationkey",
          "description": "Application key to use for recognition on MyScript handwriting recognition server.<br />\nYou have to create your own MyScript Developer account at http://dev.myscript.com and then generate your application key at http://cloud.myscript.com. See the Developer Guide to learn how to register.<br /><br />\n<b>Warning</b>: This parameter is <b>mandatory</b> and its value should be a string.",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 20
            },
            "end": {
              "line": 56,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "sortbyvalue",
          "description": "Language list sorts by values parameter. If false, language list sort by canonical name",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 20
            },
            "end": {
              "line": 64,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "languages",
          "description": "Languages List",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 20
            },
            "end": {
              "line": 71,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "unloaded",
          "description": "Properties to set when you wish to set attributes in javascript. unloaded attributes should be removed once all properties are set.\n(see demo/languages-selector-init.html for a better understanding)",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 20
            },
            "end": {
              "line": 82,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "configuration",
          "description": "Set the additional configuration used to feed MyScript ink Paper (Structure of object as defined in MyScriptjs MyScriptJSOptions.js file)\nConfiguration values are taken into account when myscript-common-element is attach to the dom and when unloaded is set to false.\nConfiguration values are not reflected to myscript-languages-element attributes plus attributes values are always taken into account before configuration values (see demo/programmatic-init.html for a better understanding).",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 20
            },
            "end": {
              "line": 91,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "debug",
          "description": "True to display console output, false otherwise.",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 20
            },
            "end": {
              "line": 99,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "languages-changed",
          "description": "Fired when the `languages` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "unloaded-changed",
          "description": "Fired when the `unloaded` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "configuration-changed",
          "description": "Fired when the `configuration` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "myscript-languages-element"
    }
  ]
}
